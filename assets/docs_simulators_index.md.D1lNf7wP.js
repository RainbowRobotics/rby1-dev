import{_ as i,c as a,a2 as e,o as t}from"./chunks/framework.3fgD02ok.js";const c=JSON.parse('{"title":"Simulators","description":"","frontmatter":{"title":"Simulators","outline":false,"sidebar":false,"prev":false,"next":false},"headers":[],"relativePath":"docs/simulators/index.md","filePath":"docs/simulators/index.md"}'),n={name:"docs/simulators/index.md"};function l(o,s,h,r,p,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="ðŸš€-explore-the-rby1-simulator" tabindex="-1">ðŸš€ Explore the RBY1 Simulator! <a class="header-anchor" href="#ðŸš€-explore-the-rby1-simulator" aria-label="Permalink to &quot;ðŸš€ Explore the RBY1 Simulator!&quot;">â€‹</a></h1><p>Now available for both <strong>ARM</strong> and <strong>x86</strong> platforms in a <strong>MuJoCo-based</strong> Docker container.<br> ðŸ‘‰ <a href="https://hub.docker.com/r/rainbowroboticsofficial/rby1-sim-arm" target="_blank" rel="noreferrer">Get Started with ARM</a><br> ðŸ‘‰ <a href="https://hub.docker.com/r/rainbowroboticsofficial/rby1-sim" target="_blank" rel="noreferrer">Get Started with x86</a></p><h2 id="how-to-use" tabindex="-1">How to Use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to Use&quot;">â€‹</a></h2><ul><li>Install Docker Compose (if not installed)</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose-v2</span></span></code></pre></div><ul><li>Use <code>ports</code> when the host and container networks are isolated (such as in WSL) and <code>network_mode: host</code> when the container can directly access the host network.</li><li>For running the simulation, use <code>rainbowroboticsofficial/rby1-sim</code> if your system is x86-based, and <code>rainbowroboticsofficial/rby1-sim-arm</code> if your system is ARM-based (like our <code>U-PC</code>). This ensures compatibility with the underlying architecture of your system.</li></ul><p><code>docker-compose.sim.yaml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.8&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rby1-sim-arm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rainbowroboticsofficial/rby1-sim</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DISPLAY=\${DISPLAY}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tmp/.X11-unix:/tmp/.X11-unix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">host</span></span></code></pre></div><ul><li>Use the <code>docker-compose.sim.yaml</code> file to start the container: ðŸ’¡ <strong>Tip</strong>: This command will pull the <code>rby1-sim</code> image automatically if itâ€™s not already downloaded.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.sim.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><ul><li>To stop the container, use:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.sim.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span></code></pre></div>`,12)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
