import{_ as t,c as a,a2 as o,o as i}from"./chunks/framework.3fgD02ok.js";const h=JSON.parse('{"title":"Kinematic Calibration","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/whitepaper/dual-arm-kinematic-calibration.md","filePath":"docs/whitepaper/dual-arm-kinematic-calibration.md"}'),r={name:"docs/whitepaper/dual-arm-kinematic-calibration.md"};function n(l,e,s,p,c,m){return i(),a("div",null,e[0]||(e[0]=[o('<h1 id="kinematic-calibration" tabindex="-1">Kinematic Calibration <a class="header-anchor" href="#kinematic-calibration" aria-label="Permalink to &quot;Kinematic Calibration&quot;">â€‹</a></h1><p>This process describes how to align the zero position of the joints of a two-armed robot with the URDF reference.</p><ul><li>Preparation</li></ul><p>This process can only be performed on a robot that has undergone approximate zero-point alignment.</p><p>The process includes moving the arms freely with gravity compensation. If the gravity compensation torque is significantly different from the required value, the robot may perform unsafe movements.</p><ul><li>Step 1</li></ul><p>Use the code from <a href="https://github1s.com/RainbowRobotics/rby1-sdk/blob/main/examples/gravity_compensation.cpp" target="_blank" rel="noreferrer">example/gravity_compensation</a> to activate gravity compensation mode on both arms. If the mode works correctly, a person should be able to move the robot&#39;s arms freely.</p><ul><li>Step 2</li></ul><p>Fix the provided calibration kit to both arms and run the <a href="https://github1s.com/RainbowRobotics/rby1-sdk/blob/main/examples/get_robot_state.cpp" target="_blank" rel="noreferrer">example/get_robot_state</a> code.</p><ul><li>Step 3</li></ul><p>Collect joint position data in various postures (more than 20) and save the data.</p><ul><li>Step 4</li></ul><p>Run the <a href="https://github1s.com/RainbowRobotics/rby1-sdk/blob/main/examples/kinematic_calibration.cpp" target="_blank" rel="noreferrer">example/kinematic_calibration</a> code. The deviation between the current robot&#39;s zero position and the URDF reference will be displayed using the collected data and pre-defined calibration kit information.</p><ul><li>Step 5</li></ul><p>Move the robot to the position obtained from the previous step and perform a zero-point reset. For instructions on resetting the zero point, refer to <a href="#">Zero-Point Reset Method</a>.</p>',15)]))}const b=t(r,[["render",n]]);export{h as __pageData,b as default};
