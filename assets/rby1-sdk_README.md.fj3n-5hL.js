import{_ as e,c as a,a2 as d,o as r}from"./chunks/framework.Dpo7o-4l.js";const h=JSON.parse('{"title":"rby1-sdk","description":"","frontmatter":{},"headers":[],"relativePath":"rby1-sdk/README.md","filePath":"rby1-sdk/README.md"}'),o={name:"rby1-sdk/README.md"};function s(i,t,n,l,p,c){return r(),a("div",null,t[0]||(t[0]=[d(`<h1 id="rby1-sdk" tabindex="-1">rby1-sdk <a class="header-anchor" href="#rby1-sdk" aria-label="Permalink to &quot;rby1-sdk&quot;">​</a></h1><p><img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" alt="License"></p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li><p><strong>CMake</strong>: Version 3.30 or higher<br> Install using snap:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>snap install cmake
</code></pre></div></li><li><p><strong>Conan</strong>: C++ package manager required for dependency management<br> Install using pip:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>pip install conan
</code></pre></div></li><li><p><strong>Poetry</strong>: Python dependency management and packaging tool<br> Install using curl:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>curl -sSL https://install.python-poetry.org | python3 -
source ~/.profile
</code></pre></div></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Clone the repository with submodules:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>git clone --recurse-submodules git@github.com:RainbowRobotics/rby1-sdk.git
</code></pre></div><h3 id="configure" tabindex="-1">Configure <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;Configure&quot;">​</a></h3><p>Configure Conan dependencies and build settings:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>conan install . -s build_type=Release -b missing -of build
</code></pre></div><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>Build the project using CMake:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>cmake --preset conan-release -D BUILD_EXAMPLES=ON
cmake --build --preset conan-release
</code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Run the examples:</p><ul><li><p><strong>C++ Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>./build/examples/example_demo_motion [RPC IP]:50051
</code></pre></div></li><li><p><strong>Python Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code>poetry shell
python examples_python/demo_motion.py 
</code></pre></div></li></ul><h2 id="arm-intellisense-issue" tabindex="-1">ARM Intellisense Issue <a class="header-anchor" href="#arm-intellisense-issue" aria-label="Permalink to &quot;ARM Intellisense Issue&quot;">​</a></h2><p>For issues with ARM Intellisense, refer to the following <a href="https://github.com/microsoft/vscode-cpptools/issues/7413" target="_blank" rel="noreferrer">GitHub Issue</a>.</p><p>To fix the Intellisense problem, add the following code at the top of your source file:</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre><code>// Add this at the top of your source file
#if __INTELLISENSE__
#undef __ARM_NEON
#undef __ARM_NEON__
#endif
</code></pre></div><h2 id="resources-and-support" tabindex="-1">Resources and Support <a class="header-anchor" href="#resources-and-support" aria-label="Permalink to &quot;Resources and Support&quot;">​</a></h2><ul><li>Documentation: <a href="https://rainbowrobotics.github.io/rby1-dev/" target="_blank" rel="noreferrer">https://rainbowrobotics.github.io/rby1-dev/</a></li><li>Official Website: <a href="https://www.rainbowrobotics.com/rby1eng" target="_blank" rel="noreferrer">Rainbow Robotics</a></li><li>Official Support Email: <a href="mailto:rby.support@rainbow-robotics.com" target="_blank" rel="noreferrer">rby.support@rainbow-robotics.com</a></li><li>GitHub Discussions: <a href="https://github.com/RainbowRobotics/rby1-sdk/discussions" target="_blank" rel="noreferrer">Join the Discussion</a></li></ul><h2 id="factory-default-joint-position-pid-gain" tabindex="-1">Factory Default Joint Position PID Gain <a class="header-anchor" href="#factory-default-joint-position-pid-gain" aria-label="Permalink to &quot;Factory Default Joint Position PID Gain&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Joint</th><th>P Gain (Factory Default)</th><th>I Gain (Factory Default)</th><th>D Gain (Factory Default)</th></tr></thead><tbody><tr><td>torso_0</td><td>80</td><td>15</td><td>200</td></tr><tr><td>torso_1</td><td>80</td><td>15</td><td>200</td></tr><tr><td>torso_2</td><td>80</td><td>15</td><td>200</td></tr><tr><td>torso_3</td><td>35</td><td>5</td><td>80</td></tr><tr><td>torso_4</td><td>30</td><td>5</td><td>70</td></tr><tr><td>torso_5</td><td>30</td><td>5</td><td>70</td></tr><tr><td>torso_6</td><td>100</td><td>5</td><td>150</td></tr><tr><td>right_arm_0</td><td>80</td><td>15</td><td>200</td></tr><tr><td>right_arm_1</td><td>80</td><td>15</td><td>200</td></tr><tr><td>right_arm_2</td><td>80</td><td>15</td><td>200</td></tr><tr><td>right_arm_3</td><td>35</td><td>5</td><td>80</td></tr><tr><td>right_arm_4</td><td>30</td><td>5</td><td>70</td></tr><tr><td>right_arm_5</td><td>30</td><td>5</td><td>70</td></tr><tr><td>right_arm_6</td><td>100</td><td>5</td><td>120</td></tr><tr><td>left_arm_0</td><td>80</td><td>15</td><td>200</td></tr><tr><td>left_arm_1</td><td>80</td><td>15</td><td>200</td></tr><tr><td>left_arm_2</td><td>80</td><td>15</td><td>200</td></tr><tr><td>left_arm_3</td><td>35</td><td>5</td><td>80</td></tr><tr><td>left_arm_4</td><td>30</td><td>5</td><td>70</td></tr><tr><td>left_arm_5</td><td>30</td><td>5</td><td>70</td></tr><tr><td>left_arm_6</td><td>100</td><td>5</td><td>150</td></tr><tr><td>head_0</td><td>800</td><td>0</td><td>4000</td></tr><tr><td>head_1</td><td>800</td><td>0</td><td>4000</td></tr></tbody></table>`,24)]))}const b=e(o,[["render",s]]);export{h as __pageData,b as default};
